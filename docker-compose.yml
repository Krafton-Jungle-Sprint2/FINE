version: "3.8"

services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: team_collaboration
      MYSQL_USER: teamuser
      MYSQL_PASSWORD: teampassword
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - team_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -prootpassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
      DATABASE_URL: mysql://root:rootpassword@mysql:3306/team_collaboration
      SHADOW_DATABASE_URL: mysql://root:rootpassword@mysql:3306/team_collaboration_shadow
      JWT_SECRET: "${JWT_SECRET:-change_me_jwt_compat}"
      ACCESS_TOKEN_SECRET: "${ACCESS_TOKEN_SECRET:-change_me_access}"
      REFRESH_TOKEN_SECRET: "${REFRESH_TOKEN_SECRET:-change_me_refresh}"
      ACCESS_TOKEN_EXPIRY: 15m
      REFRESH_TOKEN_EXPIRY: 7d
      API_PORT: 4000
      SOCKET_PORT: 5000
      NODE_ENV: production
      FRONTEND_URL: http://localhost:5173
      DATABASE_POOL_SIZE: "10"
      DATABASE_CONNECTION_TIMEOUT: "60000"
      DATABASE_QUERY_TIMEOUT: "60000"
    ports:
      - "4000:4000"
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - team_network
    # 볼륨 마운트 제거 (프로덕션에서는 빌드된 이미지 사용)
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        npx prisma migrate deploy &&
        echo 'Starting application...' &&
        node src/index.js
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prisma-studio:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /app
    environment:
      TZ: Asia/Seoul
      DATABASE_URL: mysql://root:rootpassword@mysql:3306/team_collaboration
      NODE_ENV: production
    ports:
      - "5555:5555"
    networks:
      - team_network
    depends_on:
      mysql:
        condition: service_healthy
      backend:
        condition: service_started
    command:
      [
        "sh",
        "-c",
        "sleep 30 && npx prisma studio --port 5555 --hostname 0.0.0.0 --browser none",
      ]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5555 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  mysql_data:

networks:
  team_network:
    driver: bridge
