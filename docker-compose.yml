version: "3.8"

services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: team_collaboration
      MYSQL_USER: teamuser
      MYSQL_PASSWORD: teampassword
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3307:3306" # 외부(호스트) 3307, 내부는 항상 3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - team_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    healthcheck:
      # ✅ 내부 포트 3306 기준으로 ping
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -prootpassword",
        ]
      interval: 10s
      timeout: 5s
      retries: 12

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
      DATABASE_URL: "mysql://root:rootpassword@mysql:3306/team_collaboration"
      SHADOW_DATABASE_URL: "mysql://root:rootpassword@mysql:3306/team_collaboration_shadow"
      # ✅ 반드시 32자 이상 랜덤값으로 설정 (예시는 샘플)
      JWT_SECRET: "prod_jwt_secret_8a7c7c2f39e84c0a9b2d1a6e3f0b4c12"
      ACCESS_TOKEN_SECRET: "prod_access_9b2c5c7d4e1a0f3b6c8d2e4f5a7b9c1d"
      REFRESH_TOKEN_SECRET: "prod_refresh_f12ab34cd56ef78ab90cd12ef34ab56c"
      ACCESS_TOKEN_EXPIRY: "15m"
      REFRESH_TOKEN_EXPIRY: "7d"
      API_PORT: "4000"
      SOCKET_PORT: "5000"
      NODE_ENV: "production"
      # ❗ 실제 프론트 주소로 교체하세요 (예: http://<EC2공인IP>:5173 또는 https://your.domain)
      FRONTEND_URL: "http://<EC2_IP_OR_DOMAIN>:5173"
      DATABASE_POOL_SIZE: "10"
      DATABASE_CONNECTION_TIMEOUT: "30000"
      DATABASE_QUERY_TIMEOUT: "30000"
    ports:
      - "4000:4000"
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - node_modules:/app/node_modules
    networks:
      - team_network
    command: >
      sh -lc "
        npx prisma migrate deploy &&
        node src/index.js
      "
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # (선택) 임시 헬스체크: 서비스가 unhealthy로 막힐 때만 켜세요
    # healthcheck:
    #   test: ["CMD-SHELL", "node -e \"process.exit(0)\""]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 1

  prisma-studio:
    build:
      context: ./backend
    working_dir: /app
    environment:
      TZ: Asia/Seoul
      DATABASE_URL: "mysql://root:rootpassword@mysql:3306/team_collaboration"
      NODE_ENV: "production"
    volumes:
      - ./backend:/app
      - node_modules:/app/node_modules
    ports:
      - "5555:5555"
    networks:
      - team_network
    depends_on:
      mysql:
        condition: service_healthy
    command:
      [
        "sh",
        "-lc",
        "exec npx prisma studio --port 5555 --hostname 0.0.0.0 --browser none",
      ]
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  mysql_data:
  node_modules:

networks:
  team_network:
    driver: bridge
